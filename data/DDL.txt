-- Enable the pgcrypto extension to use gen_random_uuid() for generating UUIDs.
CREATE EXTENSION IF NOT EXISTS "pgcrypto";
CREATE EXTENSION IF NOT EXISTS "vector";

-- Core System and Location Tables
-- -----------------------------------------------------------------------------
CREATE TABLE "SystemStorage"(
  "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  "Name" TEXT,
  "Description" TEXT,
  "Value" TEXT
);

CREATE TABLE "BlackList"(
  "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  "Token" TEXT
);

CREATE TABLE "Province" (
    "ID" INTEGER PRIMARY KEY,
    "Name" TEXT NOT NULL,
    "Region" TEXT,
    "SubRegion" TEXT
);

CREATE TABLE "District" (
    "ID" INTEGER PRIMARY KEY,
    "Name" TEXT NOT NULL,
    "ProvinceID" INTEGER,
    CONSTRAINT fk_Province_District FOREIGN KEY ("ProvinceID") REFERENCES "Province"("ID") ON DELETE CASCADE
);

CREATE TABLE "Ward" (
    "ID" INTEGER PRIMARY KEY,
    "Name" TEXT NOT NULL,
    "DistrictID" INTEGER,
    CONSTRAINT fk_District_ward FOREIGN KEY ("DistrictID") REFERENCES "District"("ID") ON DELETE CASCADE
);

-- -----------------------------------------------------------------------------
-- Core User Tables
-- -----------------------------------------------------------------------------
CREATE TABLE "User" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "Email" VARCHAR(255) UNIQUE NOT NULL,
    "Password" VARCHAR(255) NOT NULL,
    "Gender" TEXT,
    "PhoneNumber" VARCHAR(20) NOT NULL,
    "Role" VARCHAR(50) NOT NULL,
    "FirstName" VARCHAR(100),
    "LastName" VARCHAR(100),
    "BankAccount" VARCHAR(100),
    "ToBin" TEXT,  -- ma ngan hang
    "Avatar" TEXT,
    "UserPoint" TEXT,
    "IsActive" BOOLEAN DEFAULT TRUE,
    "Note" VARCHAR(100),
    "DateOfBirth" DATE,
    "IsPermission" BOOLEAN DEFAULT TRUE,
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ
);

CREATE TABLE "Address" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "UserID" UUID NOT NULL,
    "Province" TEXT NOT NULL,
    "District" TEXT,
    "Ward" TEXT NOT NULL,
    "ProvinceID" INTEGER NOT NULL,
    "DistrictID" INTEGER,
    "WardID" INTEGER NOT NULL,
    "StreetAddress" TEXT NOT NULL,
    "IsDefault" BOOLEAN DEFAULT FALSE,
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ,
    "IsActive" BOOLEAN DEFAULT TRUE,
    CONSTRAINT fk_address_user FOREIGN KEY ("UserID") REFERENCES "User"("ID") ON DELETE CASCADE
);

CREATE TABLE "Seller" (
    "UserID" UUID PRIMARY KEY,
    "ApprovedBy" UUID,
    "BusinessName" VARCHAR(255),
    "BusinessLicense" VARCHAR(255),
    "IdentifyCard" TEXT,
    "TaxCode" VARCHAR(100),
    "IdentifyFrontImage" TEXT,
    "IdentifyBackImage" TEXT,
    "SellerStatus" TEXT DEFAULT 'Pending',
    "ApprovedAt" TIMESTAMPTZ,
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ,
    "ReportCount" INTEGER DEFAULT 0,
    CONSTRAINT fk_seller_user FOREIGN KEY ("UserID") REFERENCES "User"("ID") ON DELETE CASCADE,
    CONSTRAINT fk_seller_approvedby FOREIGN KEY ("ApprovedBy") REFERENCES "User"("ID") ON DELETE SET NULL
);

CREATE TABLE "Staff" (
    "UserID" UUID PRIMARY KEY,
    "HireDate" DATE,
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ,
    CONSTRAINT fk_staff_user FOREIGN KEY ("UserID") REFERENCES "User"("ID") ON DELETE CASCADE
);

-- -----------------------------------------------------------------------------
-- Store and Product Catalog Tables
-- -----------------------------------------------------------------------------
CREATE TABLE "Store" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "SellerID" UUID NOT NULL,
    "StoreName" TEXT NOT NULL,
    "Province" TEXT NOT NULL,
    "District" TEXT,
    "Ward" TEXT NOT NULL,
    "ProvinceID" INTEGER NOT NULL,
    "DistrictID" INTEGER,
    "WardID" INTEGER NOT NULL,
    "Address" TEXT,
    "LogoURL" TEXT,
    "CoverImageURL" TEXT,
    "Status" TEXT DEFAULT 'Pending',
    "AdminNote" TEXT,
    "ReviewedBy" UUID,
    "ApprovedBy" UUID,
    "vendorApplicationImageUrl" JSONB,
    "StaffNotes" TEXT,
    "StaffFeedback" TEXT,
    "StaffImage" TEXT,
    "SubmittedDate" TIMESTAMPTZ,
    "DecisionDate" TIMESTAMPTZ,
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ,
    CONSTRAINT fk_store_seller FOREIGN KEY ("SellerID") REFERENCES "Seller"("UserID") ON DELETE CASCADE,
    CONSTRAINT unique_seller_per_store UNIQUE ("SellerID") -- Ràng buộc 1-1
);

CREATE TABLE "ProductCategory" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "Name" TEXT UNIQUE NOT NULL,
    "Description" TEXT,
    "IsActive" BOOLEAN DEFAULT TRUE,
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ
);

CREATE TABLE "Product" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "StoreID" UUID NOT NULL,
    "ProvinceID" INTEGER,
    "Name" TEXT NOT NULL,
    "Description" TEXT,
    "ProductImages" JSONB,
    "VideoPreviewUrl" TEXT,
    "VideoPlayBackUrl" TEXT,
    "VideoFallBackUrl" TEXT,
    "CategoryID" JSONB,
    "MadeBy" TEXT,
    "SaleCount" INTEGER DEFAULT 0,
    "Rating" NUMERIC(3, 2) DEFAULT 0.00,
    "ReviewCount" INTEGER DEFAULT 0,
    "IsActive" BOOLEAN DEFAULT TRUE,
    "TypeProduct" TEXT,
    "Status" TEXT,
    "Note" TEXT,
    "Embedding" VECTOR(768),
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ,
    CONSTRAINT fk_product_store FOREIGN KEY ("StoreID") REFERENCES "Store"("ID") ON DELETE CASCADE,
    CONSTRAINT fk_product_province FOREIGN KEY ("ProvinceID") REFERENCES "Province"("ID") ON DELETE SET NULL
);

CREATE TABLE "ProductVariant" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "ProductID" UUID NOT NULL,
    "VariantName" TEXT NULL,
    "Length" INTEGER NOT NULL,
    "Width" INTEGER NOT NULL,
    "Height" INTEGER NOT NULL,
    "Weight" INTEGER NOT NULL,
    "BasePrice" INTEGER NOT NULL,
    "commission" INTEGER NOT NULL,
    "FinalPrice" INTEGER NOT NULL,
    "IsActive" BOOLEAN DEFAULT TRUE,
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ,
    CONSTRAINT fk_variant_product FOREIGN KEY ("ProductID") REFERENCES "Product"("ID") ON DELETE CASCADE
);

CREATE TABLE "InventoryProduct" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "ProductVariantID" UUID UNIQUE NOT NULL,
    "Quantity" INTEGER NOT NULL DEFAULT 0 CHECK ("Quantity" >= 0),
    "ReservedQuantity" INTEGER NOT NULL DEFAULT 0 CHECK ("ReservedQuantity" >= 0), --stock cho combo
    "IsActive" BOOLEAN DEFAULT TRUE,
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ,
    CONSTRAINT fk_inventory_variant FOREIGN KEY ("ProductVariantID") REFERENCES "ProductVariant"("ID") ON DELETE CASCADE
);

CREATE TABLE "Combo"(
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "Name" TEXT,
    "ProvinceID" INTEGER,
    "ThumbnailURL" TEXT,
    "Description" TEXT,
    "Status" TEXT,
    "StaffNote" TEXT,
    "IsActive" BOOLEAN DEFAULT TRUE,
    CONSTRAINT fk_combo_province FOREIGN KEY ("ProvinceID") REFERENCES "Province"("ID") ON DELETE SET NULL
);

CREATE TABLE "ComboItem"(
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "ComboId" UUID,
    "ProductVariantID" UUID,
    "ComboItemName" TEXT,
    "ComboItemImageUrl" TEXT,
    "Price" INTEGER,
    "Quantity" INTEGER NOT NULL DEFAULT 0 CHECK ("Quantity" >= 0),
    "IsActive" BOOLEAN DEFAULT TRUE,
    CONSTRAINT fk_comboitem_combo FOREIGN KEY ("ComboId") REFERENCES "Combo"("ID") ON DELETE CASCADE,
    CONSTRAINT fk_comboitem_variant FOREIGN KEY ("ProductVariantID") REFERENCES "ProductVariant"("ID") ON DELETE CASCADE
);

CREATE TABLE "ProductCertificate" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "ProductID" UUID NOT NULL,
    "ReviewedByStaffID" UUID,
    "ImageURL" TEXT NOT NULL,
    "Status" TEXT,
    "StaffNotes" TEXT,
    "SubmittedDate" TIMESTAMPTZ,
    "DecisionDate" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ,
    CONSTRAINT fk_cert_product FOREIGN KEY ("ProductID") REFERENCES "Product"("ID") ON DELETE CASCADE,
    CONSTRAINT fk_cert_staff FOREIGN KEY ("ReviewedByStaffID") REFERENCES "Staff"("UserID") ON DELETE SET NULL
);

CREATE TABLE "ProductStory" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "ProductID" UUID NOT NULL,
    "Title" TEXT NOT NULL,
    "ThumbnailURL" TEXT,
    "IsActive" BOOLEAN DEFAULT TRUE,
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ,
    CONSTRAINT fk_prodstory_product FOREIGN KEY ("ProductID") REFERENCES "Product"("ID") ON DELETE CASCADE
);

CREATE TABLE "ProductStoryContent" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "ProductStoryID" UUID NOT NULL,
    "ContentType" TEXT NOT NULL,
    "ContentData" TEXT NOT NULL,
    "VideoPreviewUrl" TEXT,
    "VideoPlayBackUrl" TEXT,
    "VideoFallBackUrl" TEXT,
    "Order" INTEGER NOT NULL,
    "IsActive" BOOLEAN DEFAULT TRUE,
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ,
    CONSTRAINT fk_prodstorycontent_story FOREIGN KEY ("ProductStoryID") REFERENCES "ProductStory"("ID") ON DELETE CASCADE
);

-- -----------------------------------------------------------------------------
-- Order and Transaction Tables
-- -----------------------------------------------------------------------------
CREATE TABLE "Cart" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "UserID" UUID,
    "StoreID" UUID,
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ,
    "IsActive" BOOLEAN DEFAULT TRUE,
    CONSTRAINT fk_cart_user FOREIGN KEY ("UserID") REFERENCES "User"("ID") ON DELETE CASCADE,
    CONSTRAINT fk_cart_store FOREIGN KEY ("StoreID") REFERENCES "Store"("ID") ON DELETE CASCADE
);
CREATE TABLE "CartItem" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "CartID" UUID NOT NULL,
    "ProductInventoryID" UUID,
    "CartItemName" TEXT,
    "CartImageUrl" TEXT,
    "ComboID" UUID,
    "Quantity" INTEGER NOT NULL CHECK ("Quantity" > 0),
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ,
    "IsActive" BOOLEAN DEFAULT TRUE,
    CONSTRAINT fk_cartitem_cart FOREIGN KEY ("CartID") REFERENCES "Cart"("ID") ON DELETE CASCADE,
    CONSTRAINT fk_cartitem_variant FOREIGN KEY ("ProductInventoryID") REFERENCES "InventoryProduct"("ID") ON DELETE CASCADE,
    CONSTRAINT fk_cartitem_combo FOREIGN KEY ("ComboID") REFERENCES "Combo"("ID") ON DELETE CASCADE
);

CREATE TABLE "Order" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "GHNOrderCode" TEXT,
    "StoreID" UUID NOT NULL,
    "FromName" TEXT,
    "FromPhone" TEXT,
    "FromAddress" TEXT,
    "PaymentType" TEXT,
    "UserID" UUID,
    "ToAddressId" UUID,
    "ToName" TEXT,
    "ToAddress" TEXT,
    "TotalLength" INTEGER NOT NULL,
    "TotalWidth" INTEGER NOT NULL,
    "TotalHeight" INTEGER NOT NULL,
    "TotalWeight" INTEGER NOT NULL,
    "Status" TEXT DEFAULT 'Pending',
    "IsPayOut" BOOLEAN,
    "ShipPrice" INTEGER NOT NULL,
    "TotalOrder" INTEGER NOT NULL,
    "TotalPrice" INTEGER NOT NULL,
    "PayoutDate" TIMESTAMPTZ,
    "CancelDate" TIMESTAMPTZ,
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ,
    "Note" TEXT,
    CONSTRAINT fk_order_user FOREIGN KEY ("UserID") REFERENCES "User"("ID") ON DELETE SET NULL,
    CONSTRAINT fk_order_store FOREIGN KEY ("StoreID") REFERENCES "Store"("ID") ON DELETE SET NULL,
    CONSTRAINT fk_order_user_address FOREIGN KEY ("ToAddressId") REFERENCES "Address"("ID") ON DELETE SET NULL
);

CREATE TABLE "OrderItem" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "OrderID" UUID NOT NULL,
    "ProductInventoryID" UUID,
    "Length" INTEGER NOT NULL,
    "Width" INTEGER NOT NULL,
    "Height" INTEGER NOT NULL,
    "Weight" INTEGER NOT NULL,
    "OrderItemName" TEXT,
    "OrderItemImageUrl" TEXT,
    "ComboID" UUID,
    "BasePrice" INTEGER NOT NULL,
    "commission" INTEGER NOT NULL,
    "FinalPrice" INTEGER NOT NULL,
    "Quantity" INTEGER NOT NULL,
    "TotalPrice" INTEGER NOT NULL,
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ,
    "IsActive" BOOLEAN DEFAULT TRUE,
    CONSTRAINT fk_orderitem_order FOREIGN KEY ("OrderID") REFERENCES "Order"("ID") ON DELETE CASCADE,
    CONSTRAINT fk_orderitem_combo FOREIGN KEY ("ComboID") REFERENCES "Combo"("ID") ON DELETE CASCADE,
    CONSTRAINT fk_orderitem_variant FOREIGN KEY ("ProductInventoryID") REFERENCES "InventoryProduct"("ID") ON DELETE SET NULL
);

CREATE TABLE "OrderHistory"(
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "OrderID" UUID NOT NULL,
    "Description" TEXT,
    "TIME" TIMESTAMPTZ,
    CONSTRAINT fk_order_history FOREIGN KEY ("OrderID") REFERENCES "Order"("ID") ON DELETE CASCADE
);

CREATE TABLE "Transaction" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "UserID" UUID,
    "OrderID" UUID NOT NULL,
    "Type" TEXT NOT NULL,
    "PaymentMethod" VARCHAR(50),
    "PayosOrderCode" TEXT,
    "CheckoutURL" TEXT,
    "Description" TEXT,
    "Amount" INTEGER NOT NULL,
    "Status" TEXT NOT NULL,
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ,
    CONSTRAINT fk_transaction_user FOREIGN KEY ("UserID") REFERENCES "User"("ID") ON DELETE SET NULL,
    CONSTRAINT fk_transaction_order FOREIGN KEY ("OrderID") REFERENCES "Order"("ID") ON DELETE CASCADE
);

-- -----------------------------------------------------------------------------
-- Platform Content and Support Tables
-- -----------------------------------------------------------------------------
CREATE TABLE "ProductReview" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "ProductID" UUID NOT NULL,
    "UserID" UUID NOT NULL,
    "ReplyId" UUID,
    "Rating" NUMERIC(3, 2),
    "Comment" TEXT,
    "ImageUrl" JSONB,
    "IsActive" BOOLEAN DEFAULT TRUE,
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ,
    CONSTRAINT fk_review_product FOREIGN KEY ("ProductID") REFERENCES "Product"("ID") ON DELETE CASCADE,
    CONSTRAINT fk_review_user FOREIGN KEY ("UserID") REFERENCES "User"("ID") ON DELETE CASCADE,
    CONSTRAINT fk_review_reply FOREIGN KEY ("ReplyId") REFERENCES "ProductReview"("ID") ON DELETE CASCADE
);

CREATE TABLE "StoreStory" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "StoreID" UUID NOT NULL,
    "Title" TEXT NOT NULL,
    "ThumbnailURL" TEXT,
    "IsActive" BOOLEAN DEFAULT TRUE,
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ,
    CONSTRAINT fk_storestory_store FOREIGN KEY ("StoreID") REFERENCES "Store"("ID") ON DELETE CASCADE
);

CREATE TABLE "StoreStoryContent" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "StoreStoryID" UUID NOT NULL,
    "ContentType" TEXT NOT NULL,
    "ContentData" TEXT NOT NULL,
    "ImageUrl" JSONB,
    "VideoPreviewUrl" TEXT,
    "VideoPlayBackUrl" TEXT,
    "VideoFallBackUrl" TEXT,
    "Order" INTEGER NOT NULL,
    "IsActive" BOOLEAN DEFAULT TRUE,
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ,
    CONSTRAINT fk_storestorycontent_story FOREIGN KEY ("StoreStoryID") REFERENCES "StoreStory"("ID") ON DELETE CASCADE
);

CREATE TABLE "BlogCategory" (
    "CategoryID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "Name" TEXT UNIQUE NOT NULL,
    "IsActive" BOOLEAN DEFAULT TRUE,
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ
);

CREATE TABLE "Blog" (
    "BlogID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "UserID" UUID,
    "BlogCategoryID" JSONB,
    "Title" TEXT NOT NULL,
    "Description" TEXT,
    "Content" TEXT,
    "Image" TEXT,
    "IsActive" BOOLEAN DEFAULT TRUE,
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ,
    CONSTRAINT fk_blog_user FOREIGN KEY ("UserID") REFERENCES "User"("ID") ON DELETE SET NULL
);

CREATE TABLE "Document" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "Slug" VARCHAR(255) UNIQUE NOT NULL,
    "Title" TEXT NOT NULL,
    "Content" TEXT,
    "Version" VARCHAR(20),
    "IsPublished" BOOLEAN DEFAULT FALSE,
    "Type" TEXT,
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ
);

CREATE TABLE "Form" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "UserID" UUID NOT NULL,
    "OrderID" UUID,
    "Type" VARCHAR(100) NOT NULL,
    "Subject" TEXT,
    "ImageUrl" JSONB,
    "Description" TEXT NOT NULL,
    "Reply" TEXT,
    "StaffID" UUID,
    "StaffName" TEXT,
    "Status" VARCHAR(50) DEFAULT 'Pending',
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ,
    CONSTRAINT fk_form_user FOREIGN KEY ("UserID") REFERENCES "User"("ID") ON DELETE CASCADE,
    CONSTRAINT fk_form_order FOREIGN KEY ("OrderID") REFERENCES "Order"("ID") ON DELETE SET NULL,
    CONSTRAINT fk_form_staff FOREIGN KEY ("StaffID") REFERENCES "Staff"("UserID") ON DELETE CASCADE
);

CREATE TABLE "SearchLog" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "UserID" UUID,
    "SessionID" TEXT,
    "QueryText" TEXT NOT NULL,
    "ResultCount" INTEGER,
    "RankedProductIDs" JSONB,
    "CreatedAt" TIMESTAMPTZ,
    CONSTRAINT fk_searchlog_user FOREIGN KEY ("UserID") REFERENCES "User"("ID") ON DELETE SET NULL
);

CREATE TABLE "SearchClickLog" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "SearchID" UUID NOT NULL,
    "ProductID" UUID NOT NULL,
    "ClickPosition" INTEGER,
    "ClickedAt" TIMESTAMPTZ,
    CONSTRAINT fk_clicklog_search FOREIGN KEY ("SearchID") REFERENCES "SearchLog"("ID") ON DELETE CASCADE,
    CONSTRAINT fk_clicklog_product FOREIGN KEY ("ProductID") REFERENCES "Product"("ID") ON DELETE CASCADE
);

-- -----------------------------------------------------------------------------
-- Communication and Notification Tables
-- -----------------------------------------------------------------------------
CREATE TABLE "Room" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "SellerID" UUID,
    "CustomerID" UUID,
    "Status" BOOLEAN DEFAULT TRUE,
    "CreatedAt" TIMESTAMPTZ,
    "UpdatedAt" TIMESTAMPTZ,
    CONSTRAINT fk_room_seller FOREIGN KEY ("SellerID") REFERENCES "User"("ID") ON DELETE SET NULL,
    CONSTRAINT fk_room_customer FOREIGN KEY ("CustomerID") REFERENCES "User"("ID") ON DELETE SET NULL
);

CREATE TABLE "Message" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "RoomID" UUID NOT NULL,
    "SenderID" UUID NOT NULL,
    "MessageText" TEXT NOT NULL,
    "SentAt" TIMESTAMPTZ,
    CONSTRAINT fk_message_room FOREIGN KEY ("RoomID") REFERENCES "Room"("ID") ON DELETE CASCADE,
    CONSTRAINT fk_message_sender FOREIGN KEY ("SenderID") REFERENCES "User"("ID") ON DELETE CASCADE
);

-- -----------------------------------------------------------------------------
-- Promotion Tables (Simplified: Global & Product only)
-- -----------------------------------------------------------------------------
CREATE TABLE "Promotion" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "Type" TEXT NOT NULL, -- 'Global' | 'Product'
    "Title" TEXT NOT NULL,
    "Description" TEXT,

    -- Loại khuyến mãi: percentage | fixed_amount | freeship
    "DiscountType" TEXT NOT NULL,
    "DiscountValue" NUMERIC(10,2) NOT NULL,

    -- Quản lý thời gian
    "StartDate" TIMESTAMPTZ NOT NULL,
    "EndDate" TIMESTAMPTZ NOT NULL,

    -- Quản lý số lượng & giới hạn
    "MaxQuantity" INTEGER,              -- Tổng số lượt được phát hành (NULL = không giới hạn)
    "UsedQuantity" INTEGER DEFAULT 0,   -- Số lượt đã dùng
    "MaxPerUser" INTEGER DEFAULT 1,     -- Mỗi user được dùng bao nhiêu lần

    -- Trạng thái
    "IsActive" BOOLEAN DEFAULT TRUE,

    -- Thông tin hệ thống
    "CreatedAt" TIMESTAMPTZ DEFAULT NOW(),
    "UpdatedAt" TIMESTAMPTZ DEFAULT NOW(),

    CONSTRAINT chk_promotion_type CHECK ("Type" IN ('Global', 'Product')),
    CONSTRAINT chk_discount_value CHECK ("DiscountValue" > 0),
    CONSTRAINT chk_quantity CHECK ("MaxQuantity" IS NULL OR "MaxQuantity" >= 0),
    CONSTRAINT chk_max_per_user CHECK ("MaxPerUser" > 0)
);

CREATE TABLE "PromotionProduct" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "PromotionID" UUID NOT NULL,
    "ProductID" UUID NOT NULL,
    "IsActive" BOOLEAN DEFAULT TRUE,
    CONSTRAINT fk_promo_product FOREIGN KEY ("PromotionID") REFERENCES "Promotion"("ID") ON DELETE CASCADE,
    CONSTRAINT fk_promo_product_product FOREIGN KEY ("ProductID") REFERENCES "Product"("ID") ON DELETE CASCADE
);

CREATE TABLE "PromotionUser" (
    "ID" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    "PromotionID" UUID NOT NULL,
    "UserID" UUID NOT NULL,
    "IsRedeemed" BOOLEAN DEFAULT FALSE, -- user đã dùng chưa
    "RedeemedAt" TIMESTAMPTZ,
    "CreatedAt" TIMESTAMPTZ DEFAULT NOW(),
    "UpdatedAt" TIMESTAMPTZ DEFAULT NOW(),
    CONSTRAINT fk_promotionuser_promotion FOREIGN KEY ("PromotionID") REFERENCES "Promotion"("ID") ON DELETE CASCADE,
    CONSTRAINT fk_promotionuser_user FOREIGN KEY ("UserID") REFERENCES "User"("ID") ON DELETE CASCADE,
    CONSTRAINT unique_user_promo UNIQUE ("PromotionID", "UserID")
);
CREATE INDEX idx_cart_user_store ON "Cart"("UserID", "StoreID", "IsActive");